demo()
help()
1+2#
1+3#
1+2
2+3\3+4
2+3/2
1+2 #이대로 입력한 후 엔터 쳐보세요~~~~
save.image("C:\\R_Study\\.RData")
many(y)
mea(y)
mea(y)
mean(y)
y <- c(170,155,165)
mean(y)
1+2
save.image("C:\\R_Study\\.RData")
load("C:\\R_Study\\.RData")
quit()
load("C:\\R_Study\\.RData")
x <- data.frame(성명=c("홍길동","손오공"),나이=c(20,30),주소=c("서울","부산"))
x
x <- cbind(x,학과=c("전산학","경영학"))
x
x <- rbind(x,data.frame(성명="장발장",나이=48,주소="파리",학과="전산학")) #데이터 프레임 x에 행(장발장) 추가
x
$성명
x$성명
x[[1]][2]
x[[1]][3]
x[[1][2]]
x[[1]][1]
quakes
head(quakes, n=10) #데이터의 앞부분 10개 행 보기(디폴트 n은 6)
names(quakes) #'quakes'데이터 세트의 변수명 보기
tail(quakes,n=6) #데이터의 뒷부분 일부 보기(디폴트 n은 6)
str(quakes) #'quakes' 데이터 세트의 데이터 구조 보기
dim(quakes) #'quakes' 데이터세트의 차원 보기(행과 열의 수)
dim(quakes) #'quakes' 데이터세트의 차원 보기(행과 열의 수)
summary(quakes) #'quakes' 데이트 세트의 각 변수별 데이터 요약 정보
summary(quakes$mag)#'quakes'데이터 세트내의 mag 변수에대한 최솟값, 25 백분위수, 중앙값, 평균값 ,75백분위 수,최댓값
write.table(quakes,"c:/temp/quakes.txt",sep=",") #temp 폴더에 quakes.txt로 저장
x <- read.csv("c:/temp/quakes.txt",header=T) #temp 폴더에 있는 quakes.txt 읽기
x
x <- read.csv(file.choose(),header =T) #읽어 들일 파일을 선택할 수 있는 창이 나타남
barplot(height,names.arg=name.main="부서별 영업 실적",col=rainbow(length(height)),xlab="부서",ylab="영업실적(억 원)")
x <- read.csv(file.choose(),header =T) #읽어 들일 파일을 선택할 수 있는 창이 나타남
height <- c(9,15,20,6) #판매액 할당
name <- c("영업1팀","영업2팀","영업3팀","영업4팀") #부서명 할당
barplot(height,names.arg=name.main="부서별 영업 실적",col=rainbow(length(height)),xlab="부서",ylab="영업실적(억 원)")
barplot(height,names.arg=name,main="부서별 영업 실적",col=rainbow(length(height)),xlab="부서",ylab="영업실적(억 원)")
barplot(height,names.arg=name,main="부서별 영업 실적",col=rainbow(length(name)),xlab="부서",ylab="영업실적(억 원)")
barplot(height,names.arg=name,main="부서별 영업 실적",col=rainbow(length(name)),xlab="부서",ylab="영업실적(억 원)")
pie(x,labels= label,main="부서별 영업실적")# 파이차트 출력(데이터,라벨,제목)
x <-c(9,15,20,6) #영업 실적의 할당
label <- c("영업 1팀","영업 2팀","영업 3팀","영업 4팀") #부서명 할당
pie(x,labels= label,main="부서별 영업실적")# 파이차트 출력(데이터,라벨,제목)
for (i in 1:5){
i}
i
for (i in 1:5){i}
setwd("c:\\r_temp")
setwd("c:\\r_temp")
getwd()
getwd()
clear
setwd("c:\\r_temp")
getwd()
setwd("c:\r_temp")
setwd("c:\r_temp")
setwd("c:/r_temp")
print(1+3)
print('a')
print(pi)
print(pi,digits = 3)
print(3,4)
print('a','b')
cat(1,':','a','\n',2':','b')
cat(1,':','a','\n',2':','b')
1;2;3
10000
100000
1000000
1e2
3e2
3e-1
'1'+'2'
as.numeric('1')+as.numeric('2')
'First'
"Second"
First
clas('1')
class('1')
class(1)
3 & 0
3 & 1
3 | 0
3 | 1
cat(1,NA,2)
dsd
cat(1,NULL,2)
sum(1,NA,2)
sum(1,NULL,2)
sum(1,2,NA)
sum(1,2,NA,na.rm=T)
txt1
txt1 <- read.csv("factor_test.txt")
txt1
factor1 <-factor(txt1$blood)
factory1
factory1 <-factor(txt1$blood)
factory1
summary(factory1)
gender_F
gender_F <-factory(txt1$sex)
gender_F <-factor(txt1$sex)
gender_F
summary(gender_F)
stringAsFactors=FALSE #데이터를 Factor 형태로 바꾸지 않고, 그대로 사용하고 싶을 경우.
Sys.Date()
Sys.time()
date()
asDate('2014-11-01')
asDate("2014/11/01")
as.Date("2014/11/01")
as.Date('2014-11-01')
as.Date('2014-11-01')
as.Date("2014/11/01")
as.Date("01-11-2014")
as.Date("01-11-2014,format="%d-%m-%Y")
as.Date("01-11-2014,format="%d-%m-%Y")
as.Date("01-11-2014",format="%d-%m-%Y")
q()
